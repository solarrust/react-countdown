:root {
  --timer-duration: 10;

  --bright: #ff6e6e;
  --dark: #1f1f1f;
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  color-scheme: dark;
}

body {
  height: 100dvh;
  font-family: sans-serif;
  font-size: 6rem;
  background-color: var(--dark);
}

:is(input, button) {
  color: inherit;
  font: inherit;
  cursor: pointer;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  white-space: nowrap;
}

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  margin: 0;
  -webkit-appearance: none;
}

input[type="number"] {
  -moz-appearance: textfield;
}

.timer {
  position: relative;
  z-index: 1;
  display: grid;
  place-items: center;
  height: 100%;

  &::after {
    content: "";
    position: absolute;
    z-index: -1;
    background-color: color(from var(--bright) srgb r g b / 0.8);
    inset-inline: 0;
    inset-block-end: 0;
    block-size: 0dvh;
  }

  :has(._run, ._paused) &::after {
    animation: runningTimer calc(var(--timer-duration) * 1s) linear;
  }

  :has(._run) &::after {
    animation-play-state: running;
  }

  :has(._paused) &::after {
    animation-play-state: paused;
  }
}

.timer__inputs {
  display: flex;
  gap: 1em;
  transition: scale 0.1s ease-out;

  :has(._run, ._paused) & {
    scale: 0.3;
  }
}

.timer__label {
  text-align: center;
}

.timer__number {
  display: block;
  border: none;
  text-align: center;
  background-color: transparent;
  inline-size: 3ch;

  &:focus-visible {
    outline-color: color(from var(--bright) srgb r g b / 0.2);
  }

  :has(._run, ._paused) & {
    pointer-events: none;
  }
}

.timer__text {
  font-size: 0.5em;
}

.timer__left {
  transition: scale 0.2s ease-out;
  scale: 0;

  :has(._run, ._paused) & {
    scale: 1;
  }
}

.timer__buttons {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.timer__button {
  border: none;
  border-radius: 50%;
  font-size: 0.3em;
  text-transform: uppercase;
  background-color: var(--bright);
  transition: background-color 0.2s;
  cursor: pointer;
  user-select: none;
  inline-size: 140px;
  aspect-ratio: 1/1;

  :has(._run, ._paused) & {
    background-color: var(--dark);

    &._pause,
    &._stop {
      border-color: var(--dark);
    }
  }

  :has(._run) &._start {
    cursor: not-allowed;
    pointer-events: none;
  }

  :has(._paused) &._pause {
    cursor: not-allowed;
    pointer-events: none;
  }

  &._pause,
  &._stop {
    border: 1px solid var(--bright);
    font-size: 0.2em;
    inline-size: 100px;
  }

  &._pause {
    background-color: color(from var(--bright) srgb r g b / 0.1);
  }

  &._stop {
    background-color: transparent;
  }
}

@keyframes runningTimer {
  from {
    block-size: 100dvh;
  }
  to {
    block-size: 0dvh;
  }
}
